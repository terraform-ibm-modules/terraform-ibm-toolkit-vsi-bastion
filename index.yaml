id: github.com/cloud-native-toolkit/terraform-vsi-bastion
name: vsi-bastion
type: terraform
description: Module to provision Basion in a vsi image
tags:
  - network
  - vpc
  - bastion
versions:
  - platforms: []
    providers:
      - name: ibm
        source: "ibm-cloud/ibm"
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-5-minimal-amd64-1
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: acl_rules
        type: string
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
      - name: target_network_range
        type: string
        description: The ip address range that should be used for the network acl rules generated from the security groups
        default: 0.0.0.0/0
        optional: true
    version: v1.9.0
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was used
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-5-minimal-amd64-1
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: acl_rules
        type: string
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
      - name: target_network_range
        type: string
        description: The ip address range that should be used for the network acl rules generated from the security groups
        default: 0.0.0.0/0
        optional: true
    version: v1.8.0
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was used
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: acl_rules
        type: string
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
    version: v1.7.1
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was used
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: acl_rules
        type: string
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
    version: v1.7.0
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was used
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
    version: v1.6.0
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was used
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
    version: v1.5.1
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: base_security_group
        type: string
        description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
        default: "null"
        optional: true
    version: v1.5.0
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
    version: v1.4.1
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
    version: v1.4.0
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: cos_bucket
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: ">= 0.0.1"
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
    version: v1.3.8
    outputs:
      - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
        description: The instance ids
      - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
        description: The instance names
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output count {   value = var.vpc_subnet_count }
        description: output count {   value = var.vpc_subnet_count }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: cos_bucket
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: ">= 0.0.1"
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: security_group_rules
        scope: ignore
        type: string
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
        optional: true
      - name: allow_deprecated_image
        scope: ignore
        type: bool
        description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
        default: true
        optional: true
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
    version: v1.3.7
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: cos_bucket
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: ">= 0.0.1"
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
        optional: true
    version: v1.3.6
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: cos_bucket
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: ">= 0.0.1"
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
        optional: true
    version: v1.3.5
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: cos_bucket
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: ">= 0.0.1"
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: |-
          8
                }
              }
            ]
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
        optional: true
    version: v1.3.4
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
      - id: cos_bucket
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: ">= 0.0.1"
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: ">= 0.0.1"
        optional: true
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
      - name: resource_group_id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: |-
          8
                }
              }
            ]
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
        optional: true
    version: v1.3.3
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: resource_group_id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: |-
          8
                }
              }
            ]
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
        optional: true
    version: v1.3.2
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: resource_group_id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: |-
          8
                }
              }
            ]
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
        optional: true
    version: v1.3.1
    outputs:
      - name: ids
        description: The instance ids
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: resource_group_id
        type: string
        description: The id of the IBM Cloud resource group where the VPC has been provisioned.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
        default: 10.0.0.0/8
        optional: true
      - name: create_public_ip
        type: bool
        description: Set whether to allocate a public IP address for the virtual server instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
        default: ""
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ""
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: The crn of the root key in the kms instance. Required if kms_enabled is true
        default: "null"
        optional: true
      - name: auto_delete_volume
        type: bool
        description: Flag indicating that any attached volumes should be deleted when the instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: |-
          8
                }
              }
            ]
        description: List of security group rules to set on the bastion security group in addition to the SSH rules
        default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
        optional: true
    version: v1.3.0
    outputs:
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.vpc_subnet_count }
        description: output instance_count {   value = var.vpc_subnet_count }
      - name: output public_ips {   value = module.vsi-instance.public_ips }
        description: output public_ips {   value = module.vsi-instance.public_ips }
      - name: output private_ips {   value = module.vsi-instance.private_ips }
        description: output private_ips {   value = module.vsi-instance.private_ips }
      - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
        description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: maintenance_security_group_id
        description: The id of the security group that was created
      - name: maintenance_security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the existing VPC instance
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: The number of subnets on the vpc instance
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
        type: list(object({id = string, zone = string, label = string}))
        description: The list of subnet objects where bastion servers will be provisioned
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
        type: string
        description: The name of the IBM Cloud resource group where the Bastion instance will be created.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: The id of a key registered with the VPC
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
        type: string
        description: The name of the vpc resource
        default: ""
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: List of tags
        default: []
        optional: true
      - name: create_public_ip
        type: bool
        description: Flag to create a public ip address on the bastion instance
        default: false
        optional: true
    version: v1.2.0
    outputs:
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output instance_count {   value = var.subnet_count }
        description: output instance_count {   value = var.subnet_count }
      - name: output public_ips {   value = module.bastion[*].bastion_public_ip }
        description: output public_ips {   value = module.bastion[*].bastion_public_ip }
      - name: output private_ips {   value = module.bastion[*].bastion_private_ip }
        description: output private_ips {   value = module.bastion[*].bastion_private_ip }
      - name: output network_interface_ids {   value = module.bastion[*].bastion_network_interface_ids[0] }
        description: output network_interface_ids {   value = module.bastion[*].bastion_network_interface_ids[0] }
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
        type: string
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
        type: string
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
        type: string
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
      - name: region
        scope: global
        type: string
      - name: name_prefix
        scope: global
        type: string
      - name: ibmcloud_api_key
        scope: global
        type: string
      - name: tags
        scope: module
        type: list(string)
        default: ""
    version: v1.1.1
    outputs:
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
        description: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
      - name: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
        description: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
  - platforms: []
    dependencies:
      - id: resource-group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 1.0.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
      - name: subnet_count
        moduleRef:
          id: subnets
          output: count
        type: string
      - name: subnets
        moduleRef:
          id: subnets
          output: subnets
        type: string
      - name: resource_group_name
        moduleRef:
          id: resource-group
          output: name
        type: string
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
      - name: region
        scope: global
        type: string
      - name: name_prefix
        scope: global
        type: string
      - name: ibmcloud_api_key
        scope: global
        type: string
      - name: tags
        scope: module
        type: list(string)
    version: v1.1.0
    outputs:
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
        description: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
      - name: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
        description: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
  - platforms: []
    dependencies:
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
    variables:
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: subnet_count
        moduleRef:
          id: vpc
          output: subnet_count
        type: number
        description: The number of subnets on the vpc instance
      - name: resource_group_name
        scope: global
        type: string
        description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: name_prefix
        scope: global
        type: string
        description: The name of the vpc resource
        default: ""
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: tags
        scope: module
        type: list(string)
        description: List of tags
        default: []
        optional: true
      - name: openvpn_server_network
        scope: ignore
        type: string
        default: 10.66.0.0
        optional: true
    version: v1.0.0
    outputs:
      - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
        description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
      - name: output bastion_ip {   value = module.bastion.bastion_public_ip }
        description: output bastion_ip {   value = module.bastion.bastion_public_ip }
      - name: output bastion_private_ip {   value = module.bastion.bastion_private_ip }
        description: output bastion_private_ip {   value = module.bastion.bastion_private_ip }
      - name: 'output instance_ips {   value = [     for instance in local.instances : instance.primary_network_interface.0.primary_ipv4_address   ] }'
        description: 'output instance_ips {   value = [     for instance in local.instances : instance.primary_network_interface.0.primary_ipv4_address   ] }'
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies: []
    #    - id: cluster
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-ibm-container-platform
    #          version: ">= 1.7.0"
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster
    #          version: ">= 2.0.0"
    #    - id: namespace
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-namespace
    #          version: ">= 2.1.0"
    #    - id: dashboard
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-dashboard
    #          version: ">= 1.6.0"
    variables: []
    version: v0.0.0
